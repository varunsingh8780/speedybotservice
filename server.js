require('dotenv').config()

const express = require('express')
const app = express()

const request = require('request')
const querystring = require('querystring')
const bodyParse = require('body-parser');
//const urlencodedParser = bodyParse.urlencoded({ extended: true});

const mongoose = require('mongoose')
mongoose.Promise = global.Promise;
mongoose.connect(process.env.DB_CONNECTION_STRING, { useNewUrlParser: true, useUnifiedTopology: true })
//mongoose.connect('mongodb://localhost/speech', { useNewUrlParser: true })
const db = mongoose.connection
db.on('error', (error) => console.error(error))
db.once('open', () => console.log('connected to mongo database'))

//app.use(express.json)
app.get("/", (request, response) => {
    console.log(Date.now() + " Ping Received");
    response.end("OK - code outside router is working fine ..");
  });

app.use(bodyParse.urlencoded({
  extended: true
}))
app.use(bodyParse.json())
//http://localhost:3000/
//{
  //"Sales Target":""
//}
app.post("/", (req, res) => {
  var utterance = Object.keys(req.body)[0]
  console.log(utterance);
  getLuisIntent(utterance, (responded) => {
    console.log(responded)
    res.send(responded)
  })
  //res.end("Let it go !!")
})


const speechCommand = require('./routes/speeches')

app.use('/speeches', speechCommand )

// testing another way to use route !!
//app.route('/book')
  //.get(function(req, res) {
  //  res.send('Get a random book');
//})

function getLuisIntent(utterance, callback) {
  var response_holder;
  var endpoint = process.env.endpoint//"https://westus.api.cognitive.microsoft.com/luis/v2.0/apps/";
  var luisAppId = process.env.luisAppId//"a733a302-c668-4f6b-9e44-40ec136a6c3f";
  var endpointKey = process.env.endpointKey//"67b0938c0be14184878f67063e3061ed";
  var queryParams = {
      "verbose": true,
      "timezoneOffset": 0,
      "q": utterance,
      "subscription-key": endpointKey
  }

  var luisRequest = endpoint + luisAppId + '?' + querystring.stringify(queryParams);  // append query string to endpoint URL
  var botUrl = "http://localhost:3000/speeches/";
  request(luisRequest, function (err, response, body) {
    if (err)
        console.log("err ------> ", err);
    else {
        var data = JSON.parse(body);
        console.log(data);
        console.log(`Top Intent: ${data.topScoringIntent.intent}`);
        var intent = data.topScoringIntent.intent;
        var intentUrl = botUrl + intent;
        request(intentUrl, (req, res, body) =>{
            var intentTemplate = JSON.parse(body);
            console.log(intentTemplate[0].speechTemplate)
            response_holder = intentTemplate[0].speechTemplate
            callback(response_holder);
        })
        //if (intent == 'Customer.Info') {
            //response_holder = 'we are approaching the Customer Lucas Oil. Last year you had a Year to date Turnover of 12.300 Euro. This year you are at 10.100 Euro. You have a gap of 2.100 Euro in order to transform the trend into positive. There are as well some items in the Purchase history of Lucas Oil that Fred is not buying anymore. You will find in Speedy the list of them. I prepared a special offer for them in order to try to sell them again.';
        //}
        //else if (intent == 'None') {
            //response_holder = 'Sorry !! I did not understand you';
        //}
        //else if (intent == 'Schedule') {
            //response_holder = 'Your next visit is to Lucas Oil. By the way, the highway E32 is closed due to man at work, I suggest you to take the exit 12 and proceed on the E22 until the exit 5.';
        //}
        //else if (intent == 'Customer.Stat') {
            //response_holder = 'Lucas Oil is generating this year a turnover of 10.100 Euro. You are 2.100 Euro behind the sales of last yeat at the same period. In the last 12 Month you made a turnover of 13.500 Euro. The gross profit trend is positive in comparison to last year: 63,2%.68% of his turnover is generated by you, 32% of the turnover is generated via e-shop but no turnover is generated by the Pickup-shop.';
        //}
        
    }
  });
  
}

app.listen(3000, () => console.log('everything is fine !!'))